name: Project Workflow Automation

on:
  pull_request:
    types: 
      - opened
      - closed
  create:
    branches:
      - '*'

permissions:
  contents: read
  actions: write
  projects: write

jobs:
  manage-project-tracking:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event Information
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Branch/PR Details: ${{ toJson(github.event) }}"

      - name: Process Branch Creation
        if: github.event_name == 'create' && github.event.ref_type == 'branch'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const branchName = context.payload.ref;
              const projects = await github.rest.projects.listForOrg({
                org: context.repo.owner
              });
              
              const project = projects.data.find(p => p.name === 'A11Y');
              
              if (!project) {
                console.log('Project A11Y not found');
                return;
              }
              
              const columns = await github.rest.projects.listColumns({
                project_id: project.id
              });
              
              const inProgressColumn = columns.data.find(c => c.name.toLowerCase() === 'in progress');
              
              if (!inProgressColumn) {
                console.log('In Progress column not found');
                return;
              }
              
              await github.rest.projects.createCard({
                column_id: inProgressColumn.id,
                note: `Rama iniciada: ${branchName} por @${context.actor}`
              });
            } catch (error) {
              console.error('Error processing branch creation:', error);
            }

      - name: Process PR Merging
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const projects = await github.rest.projects.listForOrg({
                org: context.repo.owner
              });
              
              const project = projects.data.find(p => p.name === 'A11Y');
              
              if (!project) {
                console.log('Project A11Y not found');
                return;
              }
              
              const columns = await github.rest.projects.listColumns({
                project_id: project.id
              });
              
              const doneColumn = columns.data.find(c => c.name.toLowerCase() === 'done');
              
              if (!doneColumn) {
                console.log('Done column not found');
                return;
              }
              
              await github.rest.projects.createCard({
                column_id: doneColumn.id,
                note: `PR Completado: ${context.payload.pull_request.title} por @${context.payload.pull_request.user.login}`
              });
            } catch (error) {
              console.error('Error processing PR merge:', error);
            }
